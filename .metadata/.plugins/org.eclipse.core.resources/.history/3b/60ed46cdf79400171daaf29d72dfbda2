package middle;


import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

public class CombinationSumTwo {
	
	 public List<List<Integer>> combinationSum2(int[] candidates, int target) {
	        List<List<Integer>> list = new ArrayList<List<Integer>>();
	        Arrays.sort(candidates);
	        backTrack(list, new ArrayList(), candidates, target, 0);
	        return list;
	    }

	private void backTrack(List<List<Integer>> list, ArrayList arrayList,
			int[] candidates, int target, int start) {
		// TODO Auto-generated method stub
		
		if(target < 0){
			return;
		}else if (target == 0){
			list.add(new ArrayList(arrayList));
		}else{
			for(int i = start; i < candidates.length;i++){
				arrayList.add(candidates[i]);
				backTrack(list, arrayList, candidates, target-candidates[i], i+1);
				arrayList.remove(arrayList.size() - 1);
			}
		}
	}
	
	public static void main(String[] args){
		CombinationSumTwo c = new CombinationSumTwo();
		int[] candidates = new int[]{10, 1, 2, 7, 6, 1, 5};
		List<List<Integer>> l = c.combinationSum2(candidates, 8);
		System.out.println(l);
	}
	 
}
